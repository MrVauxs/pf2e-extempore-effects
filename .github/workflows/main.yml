name: Release Creation

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get-version
        run: echo "version-without-v=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      # Substitute the Manifest and Download URLs in the `module.json`.
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: module.json
        env:
          version: ${{ steps.get-version.outputs.version-without-v }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip

      # Create a folder containing all the module stuff and zip it for the release
      - name: Create Zip
        run: zip -r9 ./module.zip lang/ scripts/ styles/ Readme.md License.txt Changelog.md module.json

      - name: Get Changelog Body
        id: changelog
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: ${{ steps.get-version.outputs.version-without-v }}

      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          name: ${{ steps.get-version.outputs.version-without-v }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: './module.json, ./module.zip'

      - name: Publish to FoundryVTT
        uses: cs96and/FoundryVTT-release-package@v1.0.2
        if: ${{ !github.event.release.prerelease && env.PACKAGE_TOKEN }}
        env:
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        with:
          package-token: ${{ env.PACKAGE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
